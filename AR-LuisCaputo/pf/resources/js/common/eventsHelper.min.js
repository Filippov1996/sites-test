(() => {
    var l = class {
            constructor() {
                this.createDynamicLabel = (n = "") => n.toLowerCase().replace(/ /g, "_").replace(/á/g, "a").replace(/é/g, "e").replace(/í/g, "i").replace(/ó/g, "o").replace(/ú/g, "u"), this.addEventToDataLayer = ({
                    label: n,
                    action: t,
                    category: e,
                    event: o
                } = {}) => {
                    let a = "home_ln10",
                        s = "e_linkclick";
                    window.dataLayer && window.dataLayer.push({
                        event: o || s,
                        dynamic_category: e || a,
                        dynamic_action: t,
                        dynamic_label: n
                    })
                }, this.addEventListeners = (n, t, e) => {
                    let o = "click",
                        a = "auxclick",
                        s = () => {
                            this.addEventToDataLayer(t)
                        };
                    n && (n.addEventListener(o, e || s), n.addEventListener(a, e || s))
                }, this.getAnchorsFromGroup = n => {
                    let t = n.querySelector('[roof-group="right"]'),
                        e = n.querySelector('[roof-group="left"]'),
                        o = t && t.lastChild,
                        a = e && e.tagName === "A",
                        s = o && o.getAttribute && o.getAttribute("class").includes("button");
                    return {
                        anchorLeft: a && e,
                        actionLeft: "techo",
                        anchorRight: s && o,
                        actionRight: "cta"
                    }
                }, this.getRoofTitle = n => {
                    let t = n.querySelector(".image"),
                        e = n.querySelector(".--roof-title");
                    return t && t.alt || e && e.innerText
                }
            }
            setEventsWeather() {
                let n = window.document.querySelector(".link.ln-link.--weather"),
                    t = {
                        action: "header_clima",
                        label: "clima"
                    };
                this.addEventListeners(n, t)
            }
            setEventsTopics() {
                window.document.querySelectorAll(".tag-list a").forEach(t => {
                    let e = {
                        action: "temas_hoy",
                        label: this.createDynamicLabel(t.title)
                    };
                    this.addEventListeners(t, e)
                })
            }
            setEventsBrands() {
                window.document.querySelectorAll(".brands-list a").forEach(t => {
                    let e = {
                        action: "header_marcas",
                        label: this.createDynamicLabel(t.title)
                    };
                    this.addEventListeners(t, e)
                })
            }
            setEventsDollar() {
                window.document.querySelectorAll(".dollar a").forEach(t => {
                    let e = {
                        action: "header_dolar",
                        label: this.createDynamicLabel(t.title)
                    };
                    this.addEventListeners(t, e)
                })
            }
            setEventsFooter() {
                window.document.querySelector(".ln-footer-home").querySelectorAll(".text-start").forEach(t => {
                    let e = {
                        action: "footer",
                        label: this.createDynamicLabel(t.text)
                    };
                    this.addEventListeners(t, e)
                })
            }
            setEventsNavigationLinks() {
                document.querySelectorAll('[roof-group="right"] > .link.ln-link.flex').forEach(t => {
                    let e = this.getRoofTitle(t.parentNode.parentNode),
                        o = {
                            action: this.createDynamicLabel(`caja_${e}`),
                            label: this.createDynamicLabel(`tag_${t.innerText}`)
                        };
                    this.addEventListeners(t, o)
                })
            }
            setEventsRoof() {
                (document.querySelectorAll('[roof-container="roof-container"]') || []).forEach(t => {
                    let {
                        anchorLeft: e,
                        actionLeft: o,
                        anchorRight: a,
                        actionRight: s
                    } = this.getAnchorsFromGroup(t), i = this.getRoofTitle(t), h = (c, y, L) => {
                        let r = c.target.children,
                            f = c.target.parentElement,
                            u = c.target.innerText || c.target.alt || f.getAttribute("data-icon") || r[0] && (r[0].alt || r[0].innerHTML),
                            g = {
                                action: this.createDynamicLabel(`caja_${L||u}`),
                                label: this.createDynamicLabel(`${y}_${u}`)
                            };
                        this.addEventToDataLayer(g)
                    };
                    e && this.addEventListeners(e, null, c => h(c, o)), a && this.addEventListeners(a, null, c => h(c, s, i))
                })
            }
            setEventsAccess() {
                window.document.querySelectorAll(".access a").forEach(t => {
                    let e = {
                        action: "header_accesos",
                        label: this.createDynamicLabel(t.text)
                    };
                    this.addEventListeners(t, e)
                })
            }
            setEventSignIn() {
                let n = window.document.querySelector('button[title="Iniciar sesi\xF3n"]'),
                    t = {
                        action: "header_logo",
                        label: "iniciar_sesion"
                    };
                this.addEventListeners(n, t)
            }
            setEventsSections() {
                document.querySelectorAll(".dd-link").forEach(t => {
                    let e = Array.from(t.childNodes).filter(a => a.nodeType === Node.TEXT_NODE || a.tagName !== "SPAN").map(a => a.textContent.trim()).join(" ");
                    if (e.includes("flex")) {
                        let a = t.querySelector(".flex > div:last-child");
                        e = a ? a.textContent.trim() : ""
                    }
                    let o = {
                        action: "menu_secciones",
                        label: this.createDynamicLabel(e)
                    };
                    this.addEventListeners(t, o)
                })
            }
            setEventsGames() {
                let n = window.document.querySelectorAll(".ln-card-games > a"),
                    t = "jugar",
                    e = "juegos_ln10";
                n.forEach(o => {
                    if (!o) return;
                    let a = this.createDynamicLabel(o.title),
                        s = {
                            action: t,
                            label: `${t}_${a}`,
                            category: e
                        };
                    this.addEventListeners(o, s)
                })
            }
            setEventsFoodit() {
                let n = document.getElementById("btn-foodit-grid"),
                    t = "caja_foodit",
                    e = "home_ln10",
                    o = "cta_suscribite_a_foodit";
                if (n) {
                    let a = {
                        action: t,
                        label: `${o}`,
                        category: e
                    };
                    this.addEventListeners(n, a)
                }
            }
        },
        E = {
            construct(d, n) {
                let t = new d(...n);
                return new Proxy(t, {
                    get: function(e, o, a) {
                        let s = e[o];
                        return typeof s == "function" ? function(...i) {
                            setTimeout(() => s.apply(e, i), 0)
                        } : Reflect.get(e, o, a)
                    }
                })
            }
        },
        m = new Proxy(l, E);
    window.LN = {
        eventshelper: new m
    };
})();